# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ieF6GACKWv-zyqsU0lZir3Vk-xENIl0C
"""

"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""

# ans 最后的输出
# res 每层暂存
# curlayer 每层输出

class Solution:
    def levelOrder(self, root: 'Node') -> List[List[int]]:       
        ans = []
        if not root:
            return ans
        from collections import deque
        res = deque()
        res.append(root)
        curlayer = []
        while res:
            for _ in range(len(res)):
                cur = res.popleft()
                if cur:
                    curlayer.append(cur.val)
                    for M in cur.children:
                        res.append(M)
            ans.append(curlayer)
            curlayer = []
        return ans